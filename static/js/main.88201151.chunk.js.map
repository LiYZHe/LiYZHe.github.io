{"version":3,"sources":["components/HOC/ComponentA.js","components/HOC/ComponentB.js","components/HOC/useHOC/HOC.js","components/HOC/useHOC/ComponentA.js","components/HOC/useHOC/ComponentB.js","components/HOC/useHOC/index.js","components/redux/reducer.js","components/redux/store.js","components/redux/index.js","components/RTE/index.js","components/HOC/Children.js","components/Context/GrandSon.js","components/Context/Son.js","components/Context/Parent.js","App.js","index.js"],"names":["Component","HOC","WrapperComponent","state","toggle","click","setState","this","className","onClick","props","console","log","data","UseHOC","initState","inputValue","list","store","createStore","action","type","push","value","Object","assign","splice","window","__REDUX_DEVTOOLS_EXTENSION__","Children","num","handleChange","e","target","setTimeout","item","toString","onChange","onAddClick","onDeleteClick","connect","dispatch","GrandSon","BatteryContext","Consumer","battery","Son","createContext","Parent","name","Provider","App","handleClick","id","changeState","isShow","bind","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88201151.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ComponentA extends Component {\n    constructor(props){\n        super(props)\n        console.log(props.data);\n        \n    }\n    state = { toggle: false }\n    click=()=>{\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    }\n    render() {\n        return (\n            <div>\n                {this.props.data}\n                <button onClick={this.click}>toggle name</button>\n                {\n                    this.state.toggle && <div>ComponentA</div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class ComponentB extends Component {\n    state = { toggle: false }\n    click=()=>{\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    }\n    render() {\n        return (\n            <div>\n                <button onClick={this.click}>toggle name</button>\n                {\n                    this.state.toggle && <div>ComponentB</div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nconst HOC = WrapperComponent => class HOC extends Component {\n                                    state = { toggle: false };\n                                    click = () => {\n                                      this.setState({ toggle: !this.state.toggle });\n                                    };\n\n                                    render() {\n                                      const { toggle } = this.state;\n                                      return (\n                                        <div className=\"App\">\n                                          <button onClick={this.click}>Toggle Name</button>\n                                          {toggle && <WrapperComponent />}\n                                        </div>\n                                      );\n                                    }\n                                  };\n\nexport default HOC;\n","import React, { Component } from 'react'\nimport HOC from './HOC'\n\nclass ComponentA extends Component {\n    constructor(props){\n        super(props)\n        console.log(props.data);\n        \n    }\n    render() {\n        return (\n            <div>\n                {this.props.data}\n                ComponentA\n                {console.log(111)}\n            </div>\n        )\n    }\n}\n\nexport default HOC(ComponentA)","import React, { Component } from 'react'\nimport HOC from './HOC'\n\nclass ComponentB extends Component {\n    render() {\n        return (\n            <div>\n                ComponentB\n            </div>\n        )\n    }\n}\nexport default HOC(ComponentB)\n","import React, { Component } from 'react'\nimport ComponentA from './ComponentA'\nimport ComponentB from './ComponentB'\nexport default class UseHOC extends Component {\n    render() {\n        return (\n            <div>\n                <ComponentA />\n                <ComponentB />\n            </div>\n        )\n    }\n}\n","const initState = {\n    inputValue : 'Write Something',\n    list:[\n        '早上4点起床，锻炼身体',\n        '中午下班游泳一小时'\n    ]\n  };\nexport default function reducer(state=initState,action){\n    switch(action.type){\n        case \"add\":\n                state.list.push(action.value)\n                return Object.assign({...state,list:state.list})\n        case \"dec\":\n                state.list.splice(action.value,1)\n                return Object.assign({...state,list:state.list})\n        case \"get_list\":\n                return Object.assign({...state,list:action.value})\n    }\n    return state\n}","import {createStore} from 'redux'\nimport reducer from './reducer'\nconst store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nexport default store","import React, { Component } from 'react'\nimport store from './store'\nimport axios from 'axios'\nexport default class ReduxDemo extends Component {\n    constructor(props){\n        super(props)\n        this.state=store.getState()\n        this.storeChange=this.storeChange.bind(this)\n        store.subscribe(this.storeChange)\n    }\n    storeChange(){\n        this.setState(store.getState())\n    }\n   \n    componentDidMount(){\n        let winRef = window.open(\"\", \"_blank\");\n        axios.get('https://api.apiopen.top/musicRankings').then((res)=>{\n            \n            // function loc(){\n    //            winRef.location = 'https://blog.csdn.net/wgrzhuaq/article/details/7821725'\n//             }\n    //         setTimeout(loc(),800);\n            // const data = res.data.result\n            // console.log(data)\n            // const action = {\n            //     type:\"get_list\",\n            //     value:data\n            // }\n            // store.dispatch(action)\n        })\n    }\n    handleClick(e){\n        console.log(e)\n    }\n    render() {\n        return (\n            <div style={{margin:'10px'}}>\n                <div>\n                    <button onClick={this.handleClick}>点击</button>\n                    <input placeholder={this.state.inputValue} style={{ width:'250px', marginRight:'10px'}}/>\n                    <button type=\"primary\" onClick={()=>store.dispatch({type:\"add\",value:\"tianjia\"})}>增加</button>\n                </div>\n                <div style={{margin:'10px',width:'300px'}}>\n                    {\n                        this.state.list.map((item,index)=>{\n                            return <div>\n\n                                <img src={item.pic_s210} alt=\"\"/>\n\n                                <div key={index} onClick={()=>store.dispatch({type:\"dec\",value:index})}>{item.comment}</div>\n                            </div>\n                            \n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport BraftEditor from 'braft-editor'\nimport \"braft-editor/dist/index.css\"\nexport default class RTE extends Component {\n    state={\n        editorState:BraftEditor.createEditorState(\"<p>hello <b>world!</b></p>\"),\n        outputHTML:\"<p></p>\"\n    }\n    componentDidMount(){\n        this.isLiving=true\n        setTimeout(this.setEditorContentAsync, 3000);\n    }\n    componentWillUnmount(){\n        this.isLiving=false\n    }\n    setEditorContentAsync=()=>{\n        this.isLiving&&this.setState({\n            editorState:BraftEditor.createEditorState(\"<p>你好 <b>世界!</b></p>\")\n        })\n    }\n    handleChange=editorState=>{\n        this.setState({\n            editorState,\n            outputHTML:editorState.toHTML()\n        })\n    }\n    render() {\n        const {editorState,outputHTML}=this.state\n        return (\n            <div>\n                <BraftEditor\n                    value={editorState}\n                    onChange={this.handleChange}\n                />\n                <h5>输出内容</h5>\n                <div>{outputHTML}</div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport {connect} from 'react-redux'\nfunction mapStateToProps(state) {\n\n    return {\n        value: state.num\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onAddClick: () => {\n            dispatch({type: 'add'})\n        },\n        onDeleteClick: () => {\n            dispatch({type: 'delete'})\n        }\n    }\n}\nclass Children extends Component {\n    constructor(props){\n        super(props)\n        console.log('我是子组建')\n        \n    }\n    state = { toggle: false, num: 0 }\n    click=()=>{\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    }\n    componentWillReceiveProps(){\n        console.log(\"父组件的属性变了\")\n    }\n    componentDidMount() {\n        const list = ['a', 'b', 'c']\n\nfor (const item of list) {\n  console.log(item)\n  if (item === 'b') break\n}\nfor (const item of list) {\n    \n    if (item === 'b') {continue}\n    console.log(item)\n  }\n        console.log('子组件加载完成')\n    }\n\ncomponentDidMount() {\n    // store.subscribe(() => {\n    //     this.setState({\n    //         ...this.state, ...store.getState()\n    //     })\n    // })\n    \n}\n\nhandleChange = e => {\n    // e.persist()\n    this.setState({num: e.target.value})\n    setTimeout(() => {\n        console.log(e.type);\n    }, 0);\n    console.log(this.state.num);\n}\n    render() {\n        return (\n            <div >\n                {this.props.value.toString()}\n                {\n                    this.props.value\n                }\n                2222\n                <input onChange={this.handleChange}/>\n                <button onClick={this.props.onAddClick}>click me</button>\n                <button onClick={this.props.onDeleteClick}>decrease</button>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Children)","import React, { Component } from 'react'\nimport {BatteryContext} from './Parent'\nexport default class GrandSon extends Component {\n    \n    render() {\n        return (\n            <div>\n                <BatteryContext.Consumer>\n                {\n                    battery => <h1>Battery: {battery}</h1>\n                }\n            </BatteryContext.Consumer>\n            </div>\n        )\n    }\n}\n","import React, { Component, createContext } from 'react'\nimport GrandSon from './GrandSon'\nexport default class Son extends Component {\n    \n    render() {\n        return (\n            <div>\n                我是父亲\n                <GrandSon />\n            </div>\n        )\n    }\n}\n","import React, { Component, createContext } from 'react'\n\nimport Son from './Son.js'\nexport const BatteryContext = createContext();\nexport default class Parent extends Component {\n    state = {\n        name: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    render() {\n        return (\n            <BatteryContext.Provider value={this.state.name}>\n                父亲 <input onChange={this.handleChange}/>\n                <Son />\n            </BatteryContext.Provider>\n        )\n    }\n}\n\n","import React, { PureComponent, Component } from 'react';\nimport ComponentA from './components/HOC/ComponentA'\nimport ComponentB from './components/HOC/ComponentB'\nimport UseHOC from './components/HOC/useHOC'\nimport ReduxDemo from './components/redux'\nimport RTE from './components/RTE'\nimport axios from 'axios'\nimport Children from './components/HOC/Children'\nimport Parent from './components/Context/Parent'\n\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\n\nconst reducer = function(state={num: 0}, action =  {}) {\n    switch (action.type) {\n        case 'add':\n            state.num ++;\n            break;\n        case 'delete':\n            state.num --;\n            break;\n    }\n    return {...state}\n    \n}\nconst store = createStore(reducer)\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this)\n    this.state = {\n      isShow: false,\n      data:0\n    };\n    console.log('constructor');\n  }\n  // componentDidMount(){\n  //   axios.get('http://localhost:9090/api/index').then(res=>{\n  //     const data =res.data\n  //     console.log(data)\n  //   }\n  //     )\n  // }\n  handleClick = (id)=>{\n    console.log(id)\n    \n  }\n  componentDidMount() {\n    // window.onbeforeunload=function(e){     \n    //   　　var e = window.event||e;  \n    //   　　e.returnValue=(\"确定离开当前页面吗？\");\n    //   } \n  }\n  changeState = () => {\n    this.setState({\n      isShow: true\n    })\n  };\n  componentDidMount() {\n    console.log('父组件加载完成')\n  }\n  render(){\n    console.log('render')\n    return (\n      // <div  onClick={()=>this.handleClick()} style={{position:'absolute',top:`100px`,left:'500px',fontSize:\"50px\"}}>\n      //   ❄\n      //  <ComponentA  data={this.state.data}/>\n      //  {/* <ComponentB /> */}\n       \n      //  {/* <RTE /> */}\n      // </div>\n    <Provider store={store}>\n      <div>\n        {\n          true ? <a href=''></a> : <a></a> \n        }\n        <UseHOC /> \n      <input onChange={this.changeState.bind(this)}/>\n      <Children />\n      </div>\n      <Parent />\n      </Provider>\n      // <div>\n      //   <button onClick={this.changeState}>点击</button>\n      //   <div>{this.state.isShow.toString()}</div>\n      // </div>\n    );\n  }\n}\n// import { Component } from 'react'\n// import axios from \"axios\"\n// class App extends Component {\n//   componentDidMount(){\n//     axios.get(\"http://localhost/\").then(data=>console.log(data))\n//   }\n//   render() {\n//     return (\n//       <div style={{display:\"flex\", justifyContent:\"center\"}}>\n//           <div style={{width:\"50%\"}}>1</div> <div style={{width:\"50%\"}}>1</div><div style={{width:\"50%\",alignSelf:\"flex-end\"}}>1</div>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n"],"sourceRoot":""}